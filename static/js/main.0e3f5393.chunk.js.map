{"version":3,"sources":["App.tsx","components/GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","LENGTH","sort","good1","good2","length","ALPHABET","localeCompare","reverse","App","useState","NONE","setSortType","setReversed","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECfQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,WDFJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdJ,EADK,GAGJ,IADCK,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOP,GAEzB,OAAQK,GACN,KAAKP,EAASU,OACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UACzD,MAEF,KAAKd,EAASe,SACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,cAAcH,MAW5D,OAJIL,GACFC,EAAaQ,UAGRR,G,SAlCJT,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMkB,EAAgB,WAC3B,MAAgCC,mBAASnB,EAASoB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOX,EAAP,KAAmBc,EAAnB,KAaA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYlB,IAAaP,EAASe,WAGtCW,QAvBa,kBAAML,EAAYrB,EAASe,WAc1C,iCAcA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WACElB,IAAaP,EAASU,SAG5BgB,QApCa,kBAAML,EAAYrB,EAASU,SA0B1C,4BAeA,wBACEc,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YACGjB,IAGPkB,QAjDW,kBAAMJ,GAAad,IAuChC,sBAeED,IAAaP,EAASoB,MAAQZ,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAxDO,WACfL,EAAYrB,EAASoB,MACrBE,GAAY,IAmDN,sBAUJ,cAAC,EAAD,CAAUpB,MAAOI,EACfD,EACC,CACCE,WACAC,qBElIVmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e3f5393.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const sortAlphabet = () => setSortType(SortType.ALPHABET);\n\n  const sortByLength = () => setSortType(SortType.LENGTH);\n\n  const getReverse = () => setReversed(!isReversed);\n\n  const getReset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light':\n                sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light':\n                !isReversed,\n            },\n          )}\n          onClick={getReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={getReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={getReorderedGoods(\n        goodsFromServer,\n        ({\n          sortType,\n          isReversed,\n        }),\n      )}\n      />\n    </div>\n  );\n};\n","type Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </ul>\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}