{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","good1","good2","length","ALPABET","localeCompare","reverse","App","useState","NONE","setSortType","setReversed","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,OACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UACzD,MAEF,KAAKX,EAASY,QACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,cAAcH,MAW5D,OAJIL,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASiB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOX,EAAP,KAAmBc,EAAnB,KAaA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEhB,IAAaJ,EAASY,QAClB,iBACA,0BAENU,QArBa,kBAAMJ,EAAYlB,EAASY,UAc1C,iCAYA,wBACES,KAAK,SACLD,UACEhB,IAAaJ,EAASO,OAClB,oBACA,6BAENe,QA/Ba,kBAAMJ,EAAYlB,EAASO,SAwB1C,4BAYA,wBACEc,KAAK,SACLD,WACiB,IAAff,EACI,oBACA,6BAENiB,QAzCW,kBAAMH,GAAad,IAkChC,sBAYED,IAAaJ,EAASiB,MAAQZ,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAhDO,WACfJ,EAAYlB,EAASiB,MACrBE,GAAY,IA2CN,sBAUJ,6BACE,6BACGjB,EACCD,EACC,CACCG,WACAC,eAEFkB,KAAI,SAAAC,GAAI,OACR,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC7HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b119f0db.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n\n  const sortAlphabet = () => setSortType(SortType.ALPABET);\n\n  const sortByLength = () => setSortType(SortType.LENGTH);\n\n  const getReverse = () => setReversed(!isReversed);\n\n  const getReset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={(\n            sortType === SortType.ALPABET\n              ? 'button is-info'\n              : 'button is-info is-light'\n          )}\n          onClick={sortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={(\n            sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={(\n            isReversed === true\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          )}\n          onClick={getReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={getReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            ({\n              sortType,\n              isReversed,\n            }),\n          ).map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}